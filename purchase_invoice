frappe.ui.form.on('Purchase Invoice', {
    before_submit: function(frm,doc){
        if (cur_frm.doc.cost_center === null){
            frappe.throw("Cost center is mandatory")
        }
    },
	labour_type:function(frm,doc){
		if (cur_frm.doc.labour_type){
		   cur_frm.doc.items.forEach(i => {i.labour_type = cur_frm.doc.labour_type });
		}
		refresh_field("labour_type");
	
	},
	refresh:function(frm,doc){
		if (cur_frm.doc.labour_type){
		   cur_frm.doc.items.forEach(i => {i.labour_type = cur_frm.doc.labour_type });
		}
		refresh_field("labour_type");
		
		cur_frm.add_custom_button(__("F and F Entry"),
				function() {
				new frappe.ui.form.MultiSelectDialog({
                        doctype: "F and F Entry",
                         target: cur_frm,
                         setters: {
                                project:cur_frm.doc.nx_project,
                                subcontractor:cur_frm.doc.supplier,
                                posting_date: null

                                },
                           add_filters_group: 1,
                        get_query() {
                    return {
                        filters: { docstatus: ['=', 1],status:["=","To Bill"]}
                        };
                },
                action(selections) {

                        for(let b in selections){
                              frappe.db.get_doc("F and F Entry",selections[b],null).then(doc => {
                              cur_frm.set_value("supplier",doc.subcontractor);
                              //cur_frm.set_value("nx_reference_doctype","F and F Entry")
                              cur_frm.set_value("has_labour_work_order","Yes")
                              cur_frm.set_value("labour_type","F and F")
                              cur_frm.set_value("project",doc.project)
                              frappe.db.get_doc("Construction Settings","Construction Settings",null).then(con_sett_doc=>{
                                 var item = cur_frm.add_child('items');
                			     item.item_code = con_sett_doc.f_and_f_item;
                			     item.item_name = doc.name
                			     item.qty = 1;
                			     frappe.db.get_value("Item",{"name":con_sett_doc.f_and_f_item},["stock_uom"]).then(r =>{
                			          item.uom = r.message.stock_uom;
                			          
                			     })
                                 item.rate = doc.total_amount;
                                 item.amount = item.qty * item.rate
                                 item.nx_reference_name = doc.name;
                                 
                                 
                             })
                			     
                            
    					    
    					    //cur_dialog.hide();
    					  frappe.ui.hide_open_dialog();
    					  cur_frm.refresh_field("items");
    					    
                            });
                        }
                       //cur_frm.clear_table("items")
                       if(cur_frm.doc.items[0].item_code === undefined){
					        cur_frm.get_field("items").grid.grid_rows[0].remove();
                        }
					    cur_frm.refresh_field("items");
					    
					    
                     }
                });
				}, __("Get Items From"));	
		
		
		
		
		
		cur_frm.add_custom_button(__("Rate Work Entry"),
				function() {
				new frappe.ui.form.MultiSelectDialog({
                        doctype: "Rate Work Entry",
                         target: cur_frm,
                         setters: {
                                subcontractor:cur_frm.doc.supplier

                                },
                            add_filters_group: 1,
                        get_query() {
                    return {
                        filters: { docstatus: ['=', 1],status:["=","To Bill"]}
                        };
                },
                action(selections) {

                        for(let b in selections){
                            frappe.db.get_doc("Rate Work Entry",selections[b],null).then(doc => {
                               cur_frm.set_value("supplier",doc.subcontractor);
                               //cur_frm.set_value("nx_reference_doctype","Rate Work Entry")
                               cur_frm.set_value("has_labour_work_order","Yes")
                               cur_frm.set_value("labour_type","Rate Work")
                               
                             frappe.db.get_doc("Construction Settings","Construction Settings",null).then(con_sett_doc=>{
                		     var item = cur_frm.add_child('items');
                			     item.item_code = con_sett_doc.rate_work_item;
                			     item.item_name = doc.name;
                			     frappe.db.get_value("Item",{"name":con_sett_doc.rate_work_item},["stock_uom"]).then(r=>{
                			          item.uom = r.message.stock_uom;
                			     })
                                 item.qty = 1;
                                 item.rate = doc.total_amount;
                                 item.amount = item.qty * item.rate
                                 item.nx_rw_reference_name = doc.name;
                             })
    					    
    					    //cur_dialog.hide();
    					  frappe.ui.hide_open_dialog();
    					  cur_frm.refresh_field("items");
    					    
                            });
                        }
                       //cur_frm.clear_table("items")
                       if(cur_frm.doc.items[0].item_code === undefined){
					        cur_frm.get_field("items").grid.grid_rows[0].remove();
                        }
					    cur_frm.refresh_field("items");
					    
					    
                     }
                });
				}, __("Get Items From"));	
		
		cur_frm.add_custom_button("Unlink From CRE", () => {
                frappe.call({
                    method: "construction.construction.purchase_invoice.unlink_purchase_invoice_in_CRE",
                    args: {
                        "docname": cur_frm.doc.name
                    }
                });
            
        });
	
	}

});












frappe.ui.form.on("Purchase Invoice","project", function(){ 
  for (var i =0; i < cur_frm.doc.items.length; i++){ 
    cur_frm.doc.items[i].project = cur_frm.doc.project} 
    cur_frm.refresh_field('items');
  });

frappe.ui.form.on("Purchase Invoice","cost_center", function(){ 
  for (var i =0; i < cur_frm.doc.items.length; i++){ 
    cur_frm.doc.items[i].cost_center = cur_frm.doc.cost_center} 
    cur_frm.refresh_field('items');
  });
  
